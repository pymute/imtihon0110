openapi: 3.0.3
info:
  title: Django DRF Ecommerce
  version: 0.0.0
paths:
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /assisant/Expired/:
    get:
      operationId: assisant_Expired_list
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
  /assisant/api/customer/{user_id}/purchases/:
    get:
      operationId: assisant_api_customer_purchases_list
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingCart'
          description: ''
  /assisant/api/price_count/{customer_id}/:
    get:
      operationId: assisant_api_price_count_retrieve
      parameters:
      - in: path
        name: customer_id
        schema:
          type: integer
        required: true
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /assisant/categories/:
    get:
      operationId: assisant_categories_list
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /assisant/categories/{id}/:
    get:
      operationId: assisant_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /assisant/categories/{id}/delete:
    delete:
      operationId: assisant_categories_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /assisant/categories/{id}/update:
    put:
      operationId: assisant_categories_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - assisant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: assisant_categories_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - assisant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /assisant/categories/create/:
    post:
      operationId: assisant_categories_create_create
      tags:
      - assisant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /assisant/customers/:
    get:
      operationId: assisant_customers_list
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
          description: ''
    post:
      operationId: assisant_customers_create
      tags:
      - assisant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /assisant/customers/{id}/:
    get:
      operationId: assisant_customers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /assisant/customers/{id}/delete:
    delete:
      operationId: assisant_customers_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /assisant/customers/{id}/update:
    put:
      operationId: assisant_customers_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - assisant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: assisant_customers_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this customer.
        required: true
      tags:
      - assisant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /assisant/customers/create/:
    post:
      operationId: assisant_customers_create_create
      tags:
      - assisant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /assisant/products/:
    get:
      operationId: assisant_products_list
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
  /assisant/products/{id}/:
    get:
      operationId: assisant_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /assisant/products/{id}/delete:
    delete:
      operationId: assisant_products_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /assisant/products/{id}/update:
    put:
      operationId: assisant_products_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - assisant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: assisant_products_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - assisant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /assisant/products/create/:
    post:
      operationId: assisant_products_create_create
      tags:
      - assisant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /assisant/shopping_carts/:
    get:
      operationId: assisant_shopping_carts_list
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingCart'
          description: ''
  /assisant/shopping_carts/{id}/:
    get:
      operationId: assisant_shopping_carts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shopping cart.
        required: true
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
          description: ''
  /assisant/shopping_carts/{id}/delete:
    delete:
      operationId: assisant_shopping_carts_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shopping cart.
        required: true
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /assisant/shopping_carts/{id}/update:
    put:
      operationId: assisant_shopping_carts_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shopping cart.
        required: true
      tags:
      - assisant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
          description: ''
    patch:
      operationId: assisant_shopping_carts_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shopping cart.
        required: true
      tags:
      - assisant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCart'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
          description: ''
  /assisant/shopping_carts/create/:
    post:
      operationId: assisant_shopping_carts_create_create
      tags:
      - assisant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
          description: ''
  /assisant/total_inventory_price/:
    get:
      operationId: assisant_total_inventory_price_retrieve
      tags:
      - assisant
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /swagger/:
    get:
      operationId: swagger_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - corejson
          - openapi
          - swagger
      tags:
      - swagger
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    Category:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        title:
          type: string
          maxLength: 200
      required:
      - name
      - title
    Customer:
      type: object
      properties:
        location:
          type: string
          nullable: true
          maxLength: 100
        name:
          type: string
          maxLength: 200
        phone:
          type: string
          nullable: true
          maxLength: 15
        address:
          type: string
          format: email
          nullable: true
          maxLength: 150
    NullEnum:
      enum:
      - null
    PatchedCategory:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        title:
          type: string
          maxLength: 200
    PatchedCustomer:
      type: object
      properties:
        location:
          type: string
          nullable: true
          maxLength: 100
        name:
          type: string
          maxLength: 200
        phone:
          type: string
          nullable: true
          maxLength: 15
        address:
          type: string
          format: email
          nullable: true
          maxLength: 150
    PatchedProduct:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        category:
          $ref: '#/components/schemas/Category'
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
    PatchedShoppingCart:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        payment:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        date:
          type: string
          format: date-time
    PaymentEnum:
      enum:
      - Cash
      - Card
      type: string
      description: |-
        * `Cash` - Cash
        * `Card` - Card
    Product:
      type: object
      properties:
        name:
          type: string
          maxLength: 200
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        category:
          $ref: '#/components/schemas/Category'
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
      required:
      - category
      - name
      - price
    ShoppingCart:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        payment:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        date:
          type: string
          format: date-time
      required:
      - customer
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
